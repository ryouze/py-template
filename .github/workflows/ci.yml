# This workflow will install Python dependencies and run tests with a variety of Python versions.
# Reference: https://github.com/actions/starter-workflows/blob/main/ci/python-package.yml
# For more information, see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**/*.md"
      - "LICENSE"
      #- ".gitignore"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "**/*.md"
      - "LICENSE"
      #- ".gitignore"

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      # If true, cancel the workflow run if any matrix job fails.
      # If false, continue to run the workflow and complete all matrix jobs, even if one or more jobs fail.
      fail-fast: false

      matrix:
        python-version: ["3.12", "3.13"]
        # python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "poetry"

      - name: Configure poetry
        # We can either create "poetry.toml" that sets "virtualenvs.create true" or set it here.
        # However, "poetry.toml" would force "virtualenvs.create true" onto all users of the project.
        # By doing it here, we can respect the user's configuration.
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - name: Install all dependencies
        run: poetry install --all-groups

      - name: Test
        run: poetry run pytest -v
